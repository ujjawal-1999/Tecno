{"version":3,"sources":["Form/InputForm.jsx","Form/WorkshopForm.jsx","Form/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["AddressForm","props","state","submitLoading","errorMessage","error","submitSuccess","formError","name","email","mobile","whatsapp","institute","city","zip","values","val","field","console","log","this","setState","prevState","axios","method","url","data","then","response","catch","e","Fragment","Grid","item","xs","sm","Typography","variant","gutterBottom","align","container","spacing","formData","map","form","type","key","text","grid","TextField","required","label","value","fullWidth","onChange","event","onFormChange","target","style","marginTop","Button","color","onClick","handleSubmission","CircularProgress","Snackbar","open","anchorOrigin","horizontal","vertical","message","onClose","autoHideDuration","Component","WorkshopForm","margin","textAlign","fontSize","length","helperText","backgroundColor","FormPaper","styled","Paper","Copyright","Link","href","Form","CssBaseline","padding","minHeight","component","path","App","Boolean","window","location","hostname","match","defaults","headers","common","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e95b7b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress, Snackbar } from '@material-ui/core';\nimport axios from 'axios';\nimport formData from './config/ca.json';\n\nclass AddressForm extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      submitLoading: false,\n      errorMessage: '',\n      error: false,\n      submitSuccess: false,\n      formError:{\n        name: '',\n        email: '',\n        mobile: '',\n        whatsapp: '',\n        institute: '',\n        city: '',\n        state: '',\n        zip: ''\n      },\n      values:{\n        name: '',\n        email: '',\n        mobile: '',\n        whatsapp: '',\n        institute: '',\n        city: '',\n        state: '',\n        zip: ''\n      }\n    };\n  }\n\n  onFormChange(val, field){\n    console.log(val);\n    this.setState(prevState =>{\n      return ({\n        ...prevState,\n          values:{\n            ...prevState.values,\n            [field]: val\n        }\n      });\n    });\n  }\n\n  handleSubmission(){\n    this.setState({\n      submitLoading: true\n    });\n    axios({\n      method: 'POST',\n      url: '/ca/register',\n      data: this.state.values\n    }).then((response)=>{\n      console.log(response);\n      this.setState({\n        submitLoading: false,\n        submitSuccess: true\n      });\n    }).catch((e)=>{\n      console.log(e);\n      this.setState({\n        submitLoading: false,\n        error: true,\n        errorMessage: 'E-Mail already registered'\n      });\n    });\n  }\n\n  render(){\n    const { values, submitSuccess } =this.state;\n    if(!submitSuccess){\n      return (\n        <React.Fragment>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h6\" gutterBottom align=\"left\">\n              Contact Information\n            </Typography>\n          </Grid>\n          <Grid container spacing={3}>\n            {formData.map((form)=>{\n              if(form.type==='information'){\n                return(\n                  <Grid item xs={12} sm={12} key={form.name}>\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\n                      {form.text}\n                    </Typography>\n                  </Grid>\n                );\n              }\n              return(\n                <Grid item xs={form.grid.xs} sm={form.grid.sm} key={form.name}>\n                  <TextField\n                    required={form.required}\n                    name={form.name}\n                    label={form.label}\n                    value={values[form.name] || ''}\n                    fullWidth={form.fullWidth}\n                    onChange={(event)=>{\n                      this.onFormChange(event.target.value, form.name);\n                    }}\n                  />\n                </Grid>\n              )\n            })}\n          </Grid>\n      \n          <div style={{ marginTop: '4vh' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={()=>{\n                this.handleSubmission();\n              }}\n            >\n              {this.state.submitLoading && (<CircularProgress style={{ color: \"#fff\" }} />)}\n              {!this.state.submitLoading && (\"Register\")}\n            </Button>\n          </div>\n          <Snackbar\n            open={this.state.error}\n            anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n            message={this.state.errorMessage}\n            variant=\"error\"\n            onClose={()=> {\n              this.setState({\n                error: false\n              })\n            }}\n            autoHideDuration={5000}\n          />\n        </React.Fragment>\n      );\n    }\n    else{\n      return(\n        <React.Fragment>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h5\" gutterBottom align=\"center\">\n              Successfully Registered\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom align=\"center\">\n              Our Team Will Reach You Soon\n            </Typography>\n          </Grid>\n        </React.Fragment>\n      );\n    }\n\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress, Snackbar } from '@material-ui/core';\nimport axios from 'axios';\nimport formData from './config/workshop.json';\n\nclass WorkshopForm extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      submitLoading: false,\n      errorMessage: '',\n      error: false,\n      submitSuccess: false,\n      formError:{\n        name: '',\n        email: '',\n        mobile: '',\n        whatsapp: '',\n        institute: '',\n        city: '',\n        state: '',\n        zip: ''\n      },\n      values:{\n        name: '',\n        email: '',\n        mobile: '',\n        whatsapp: '',\n        institute: '',\n        city: '',\n        state: '',\n        zip: ''\n      }\n    };\n  }\n\n  onFormChange(val, field){\n    this.setState(prevState =>{\n      return ({\n        ...prevState,\n          values:{\n            ...prevState.values,\n            [field]: val\n        }\n      });\n    });\n  }\n\n  handleSubmission(){\n    this.setState({\n      submitLoading: true\n    });\n    axios({\n      method: 'POST',\n      url: '/workshop/register',\n      data: this.state.values\n    }).then((response)=>{\n      console.log(response);\n      this.setState({\n        submitLoading: false,\n        submitSuccess: true\n      });\n    }).catch((e)=>{\n      console.log(e.response);\n      if(e.response.data.error==='email'){\n        this.setState({\n          submitLoading: false,\n          error: true,\n          formError:{\n            email: 'Email Already Registered'\n          },\n          errorMessage: e.message\n        });\n      }\n      else{\n        this.setState({\n          submitLoading: false,\n          error: true,\n          errorMessage: 'Error Occurred'\n        });\n      }\n    });\n  }\n\n  render(){\n    const { values, submitSuccess, formError } =this.state;\n    if(!submitSuccess){\n      return (\n        <React.Fragment>\n          <Grid item xs={12} sm={12} style={{margin: '5% 0%', textAlign: 'center', fontSize: '2.5vh'}}>\n            Registration For Workshop\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h6\" gutterBottom align=\"left\">\n              Contact Information\n            </Typography>\n          </Grid>\n          <Grid container spacing={3}>\n            {formData.map((form)=>{\n              if(form.type==='information'){\n                return(\n                  <Grid item xs={12} sm={12} key={form.name}>\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\n                      {form.text}\n                    </Typography>\n                  </Grid>\n                );\n              }\n              return(\n                <Grid item xs={form.grid.xs} sm={form.grid.sm} key={form.name}>\n                  <TextField\n                    required={form.required}\n                    name={form.name}\n                    label={form.label}\n                    error={formError[form.name] && formError[form.name].length>0}\n                    helperText={formError[form.name]}\n                    value={values[form.name] || ''}\n                    fullWidth={form.fullWidth}\n                    onChange={(event)=>{\n                      this.onFormChange(event.target.value, form.name);\n                    }}\n                  />\n                </Grid>\n              )\n            })}\n          </Grid>\n      \n          <div style={{ marginTop: '4vh' }}>\n            <Button\n              variant=\"contained\"\n              style={{ backgroundColor: '#007792', color: '#fff' }}\n              onClick={()=>{\n                this.handleSubmission();\n              }}\n            >\n              {this.state.submitLoading && (<CircularProgress style={{ color: \"#fff\" }} />)}\n              {!this.state.submitLoading && (\"Register\")}\n            </Button>\n          </div>\n          <Snackbar\n            open={this.state.error}\n            anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n            message={this.state.errorMessage}\n            variant=\"error\"\n            onClose={()=> {\n              this.setState({\n                error: false\n              })\n            }}\n            autoHideDuration={5000}\n          />\n        </React.Fragment>\n      );\n    }\n    else{\n      return(\n        <React.Fragment>\n          <Grid item xs={12} sm={12} style={{ margin: '20vh 0vw' }}>\n            <Typography variant=\"h4\" gutterBottom align=\"center\" style={{ color: '#074F57' }}>\n              Successfully Registered\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom align=\"center\">\n              For Workshop\n            </Typography>\n          </Grid>\n        </React.Fragment>\n      );\n    }\n\n  }\n}\n\nexport default WorkshopForm;\n","import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './InputForm';\nimport WorkshopForm from './WorkshopForm';\nimport styled from 'styled-components';\n\nconst FormPaper = styled(Paper)`\n  width: 60vw;\n  padding: 0;\n  margin: 5vw 20vw 2vw;\n\n  @media(orientation:portrait) {\n    width: 100vw;\n    margin: 0;\n  }\n`;\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://tecnoesis.org/\">\n        Tecnoesis 2020\n      </Link>\n      {'.'}\n    </Typography>\n  );\n}\n\nclass Form extends Component{\n  \n  \n  render(){\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <main >\n          <FormPaper>\n            <Grid container spacing={1}>\n              <Grid item sm={6} xs={12} style={{ backgroundColor: '#007792', color: '#fff', padding: '4vh 2vw', minHeight: '75vh'}} >\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                  Information\n                </Typography>\n              </Grid>\n              <Grid item sm={6} xs={12} style={{ padding: '2vh 2vw', color: '#007792' }} >\n\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                Tecnoesis 2020\n\n              </Typography>\n                  <React.Fragment>\n                  <Switch>\n                    <Route path='/form/ca' component={AddressForm} />\n                    <Route path='/form/workshop' component={WorkshopForm} />\n                  </Switch>\n                  </React.Fragment>\n              </Grid>\n\n            </Grid>\n          </FormPaper>\n          <Copyright />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Form from './Form/Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Form />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:7000';\naxios.defaults.headers.common['Content-Type']='application/json';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}