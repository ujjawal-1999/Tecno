{"version":3,"sources":["Admin/Workshop/index.jsx","Admin/CA/index.jsx","Admin/index.jsx","App.js","serviceWorker.js","index.js"],"names":["WorkshopList","props","state","rows","viewDefaulter","loadingRows","pagination","rowsPerPage","page","axios","get","then","response","setState","data","catch","err","console","log","this","columns","viewRecord","filter","row","payment_id","CircularProgress","style","marginTop","Fragment","display","justifyContent","padding","Typography","component","length","FormControlLabel","control","Switch","checked","onChange","prevState","value","label","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","maxWidth","map","column","key","TableBody","index","hover","role","_id","city","zip","toLowerCase","Component","CAList","rowVisible","slice","FormPaper","styled","Paper","LoginContainer","div","Admin","seletedTab","errorMessage","login","loginVal","username","password","field","val","AppBar","position","backgroundColor","Toolbar","variant","charAt","toUpperCase","marginLeft","Button","color","onClick","Tabs","event","Tab","preventDefault","href","id","CA","Workshop","Grid","item","xs","sm","margin","textAlign","fontSize","Divider","TextField","required","name","handleFormChange","target","fullWidth","type","handleLogin","disabled","Snackbar","open","anchorOrigin","horizontal","vertical","message","onClose","error","autoHideDuration","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.398ee7ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, FormControlLabel, Switch, Typography } from '@material-ui/core';\nimport axios from 'axios';\n\n\nclass WorkshopList extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      rows:[],\n      viewDefaulter: false,\n      loadingRows: true,\n      pagination:{\n        rowsPerPage: 5,\n        page: 1\n      }\n    };\n  }\n\n  componentDidMount(){\n    axios.get('/workshop/fetchAllWorkshops').then((response)=>{\n      this.setState({\n        rows: [...response.data],\n        loadingRows: false\n      })\n    }).catch((err)=>{\n      console.log(err.response);\n      console.log('ERROR', err);      \n      this.setState({\n        loadingRows: false\n      })\n    });\n  }\n\n  render(){\n    const { loadingRows, rows, viewDefaulter } = this.state || {};\n    const columns=['Name','Email', 'Mobile', 'Workshop', 'Institute', 'Address'];\n    const viewRecord=rows.filter((row)=>{\n      return (row.payment_id!==null && !viewDefaulter) || viewDefaulter;\n    });\n    if(loadingRows){\n      return (<CircularProgress style={{ marginTop: '15vh' }} />);\n    }\n    return(\n      <React.Fragment>\n        <div style={{ display: 'flex', justifyContent: 'space-between', padding: '2% 2% 0' }}>\n        <Typography component=\"h3\">\n          {viewRecord.length} records found.\n        </Typography>\n        <FormControlLabel\n          control={\n            <Switch checked={viewDefaulter} onChange={()=>{\n              this.setState((prevState)=>({\n                ...prevState,\n                viewDefaulter: !prevState.viewDefaulter\n              }))\n            }} value=\"checkedA\" />\n          }\n          label=\"View Defaulters\"\n        />\n      </div>\n        <TableContainer style={{ marginTop: '2vh' }}>\n          \n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\" style={{ maxWidth: '0px' }}>\n                  S.No.  \n                </TableCell>\n                {columns.map(column => (\n                  <TableCell\n                    key={column}\n                    align=\"left\"\n                  >\n                    {column}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {viewRecord.map((row,index) => {\n                return (\n                  <TableRow hover role=\"checkbox\" key={row._id}>\n                    <TableCell align=\"left\" style={{ maxWidth: '0px' }}>\n                      {index+1}    \n                    </TableCell>\n                    {columns.map(column => (\n                      <TableCell key={column} align=\"left\">\n                        {column==='Address' && `${row.city}, ${row.state} - ${row.zip}`}\n                        {column!='Address' && row[column.toLowerCase()]}\n                      </TableCell>\n                      \n                    ))}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {/* <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={pagination.rowsPerPage}\n          page={pagination.page}\n          onChangePage={(event, page)=>{\n            this.setState({\n              pagination:{\n                page\n              }\n            })\n          }}\n          onChangeRowsPerPage={(event, rowsPerPage)=>{\n            this.setState({\n              pagination:{\n                rowsPerPage\n              }\n            })\n          }}\n        /> */}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default WorkshopList;","import React, { Component } from 'react';\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress } from '@material-ui/core';\nimport axios from 'axios';\n\n\nclass CAList extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      rows:[],\n      viewDefaulter: false,\n      loadingRows: true,\n      pagination:{\n        rowsPerPage: 5,\n        page: 1\n      }\n    };\n  }\n\n  componentDidMount(){\n    axios.get('/ca/fetchAllCAs').then((response)=>{\n      this.setState({\n        rows: [...response.data],\n        loadingRows: false\n      })\n    }).catch((err)=>{\n      console.log(err.response);\n      console.log('ERROR', err);      \n      this.setState({\n        loadingRows: false\n      })\n    });\n  }\n\n  render(){\n    const { loadingRows, rows, pagination } = this.state || {};\n    const columns=['Name','Email', 'Mobile', 'Whatsapp', 'Institute', 'Address'];\n    if(loadingRows){\n      return (<CircularProgress style={{ marginTop: '15vh' }} />);\n    }\n    const rowVisible = rows.slice((pagination.page-1)*pagination.rowsPerPage, (pagination.page)*pagination.rowsPerPage);\n    return(\n      <React.Fragment>\n      <TableContainer style={{ marginTop: '2vh' }}>\n        \n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column}\n                  align=\"left\"\n                >\n                  {column}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rowVisible.map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" key={row._id}>\n                  {columns.map(column => (\n                    <TableCell key={column} align=\"left\">\n                      {column==='Address' && `${row.city}, ${row.state} - ${row.zip}`}\n                      {column!='Address' && row[column.toLowerCase()]}\n                    </TableCell>\n                    \n                  ))}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <TablePagination\n        rowsPerPageOptions={[5, 10]}\n      component=\"div\"\n      count={rows.length}\n      rowsPerPage={pagination.rowsPerPage}\n      page={pagination.page}\n      onChangePage={(event, page)=>{\n        this.setState({\n          pagination:{\n            page\n          }\n        })\n      }}\n      onChangeRowsPerPage={(event, rowsPerPage)=>{\n        this.setState({\n          pagination:{\n            rowsPerPage\n          }\n        })\n        }}\n      /> */}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default CAList;","import React, { Component } from 'react';\nimport { AppBar, Typography, Toolbar, Button, Tabs, Tab, Paper, Grid, Divider, TextField, Snackbar } from '@material-ui/core';\nimport WorkshopList from './Workshop';\nimport CAList from './CA';\nimport styled from 'styled-components';\n\nconst FormPaper = styled(Paper)`\n  width: 40vw;\n  min-height: 60vh;\n  padding: 2vh 2vw;\n  margin: 5vw 28vw 2vw;\n\n  @media(orientation:portrait) {\n    width: 100vw;\n    margin: 0;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  margin-top: -10vh;\n  background-color: #0285a1;\n`;\n\n\nclass Admin extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      seletedTab: 0,\n      errorMessage:'',\n      login: false,\n      loginVal:{\n        username: '',\n        password: ''\n      }\n    };\n  }\n\n  handleLogin(){\n    const {loginVal} = this.state;\n    if((loginVal.password==='hailgst2020' && (loginVal.username==='siddhartha' || loginVal.username==='shivam')) || \n      (loginVal.password==='itsme' && (loginVal.username==='major'))\n    ){\n      this.setState({\n        login: true\n      })\n    }\n    else{\n      this.setState({\n        errorMessage: 'Invalid Details'\n      })\n    }\n  }\n\n  handleFormChange(field, val){\n    this.setState((prevState)=>({\n      ...prevState,\n      loginVal:{\n        ...prevState.loginVal,\n        [field]: val\n      }\n    }));\n  }\n\n  render(){\n    const {login, loginVal} = this.state;\n    if(!login){\n      return(\n        <LoginContainer>\n          <FormPaper>\n            <Grid item xs={12} sm={12} style={{margin: '5% 0%', textAlign: 'center', fontSize: '3.5vh'}}>\n              Login To Tecnoesis 2020\n            </Grid>\n            <Divider />\n            <Grid item xs={8} sm={8} style={{margin: '2vh 0' }}>\n              <TextField \n                label=\"Username\"\n                required\n                name=\"username\"\n                value={loginVal.username}\n                onChange={(event)=>{\n                  this.handleFormChange('username', event.target.value)\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid  item xs={8} sm={8} style={{margin: '2vh 0' }}>\n              <TextField \n                label=\"Password\"\n                required\n                name=\"password\"\n                type=\"password\"\n                onChange={(event)=>{\n                  this.handleFormChange('password', event.target.value)\n                }}\n                value={loginVal.password}\n                fullWidth\n              />\n            </Grid>\n            <Button variant=\"contained\" color=\"primary\" style={{margin: '3vh 0' }}\n              onClick={()=>{\n                this.handleLogin();\n              }}\n              disabled={loginVal.username==='' || loginVal.password===''}\n            >\n              Login\n            </Button>\n          </FormPaper>\n          <Snackbar\n            open={this.state.errorMessage!==''}\n            anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n            message={this.state.errorMessage}\n            variant=\"error\"\n            onClose={()=> {\n              this.setState({\n                error: false\n              })\n            }}\n            autoHideDuration={5000}\n          />\n        </LoginContainer>\n      );\n    }\n    return(\n      <React.Fragment>\n        <AppBar position=\"static\" style={{ backgroundColor: '#0285a1' }}>\n        <Toolbar>\n            <Typography variant=\"h5\">\n            {`Hi ${loginVal.username.charAt(0).toUpperCase()}${loginVal.username.slice(1)},`}\n            </Typography>\n            <span style={{ marginLeft: 'auto' }}>\n             \n                <Button color=\"inherit\" onClick={()=>{\n                  this.setState({\n                    login: false\n                  })\n                }}>\n                  Logout\n                </Button>\n            </span>\n          </Toolbar>\n        </AppBar>\n        <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          aria-label=\"nav tabs example\"\n          onChange={(event, val)=>{\n            this.setState({\n              seletedTab: val\n            });\n          }}\n          style={{ backgroundColor: '#0285a1' }}\n        >\n          <Tab\n            component=\"a\"\n            onClick={event => {\n              event.preventDefault();\n            }}\n            label=\"Campus Ambassdor\"\n            href=\"/lo\"\n            id=\"ca\"\n          />\n          <Tab\n            component=\"a\"\n            onClick={event => {\n              event.preventDefault();\n            }}\n            label=\"Workshop\"\n            href=\"\"\n            id=\"workshop\"\n          />\n        </Tabs>\n      </AppBar>\n      {this.state.seletedTab===0 && (<CAList />)}\n      {this.state.seletedTab===1 && (<WorkshopList />)}\n    </React.Fragment>\n    );\n  }\n};\n\nexport default Admin;","import React from 'react';\nimport Admin from './Admin';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Admin />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}